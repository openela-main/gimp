Built out of the following commits from release 2.10.36:
- 7db71cd0b6e36c454aa0d2d3efeec7e636db4dbc
- e92f279c97282a2b20dca0d923db7465f2057703
- 9dda8139e4d07e3a273436eda993fef32555edbe

Applied onto worktree starting from top to bottom.
---
 plug-ins/file-dds/ddsread.c | 39 +++++++++++++++++++++++++++++++++++++
 1 file changed, 39 insertions(+)

diff --git a/plug-ins/file-dds/ddsread.c b/plug-ins/file-dds/ddsread.c
index 72102d0e1c..ba5b712edd 100644
--- a/plug-ins/file-dds/ddsread.c
+++ b/plug-ins/file-dds/ddsread.c
@@ -124,6 +124,7 @@ read_dds (GFile          *file,
   guint              l = 0;
   guchar            *pixels;
   FILE              *fp;
+  gsize              file_size;
   dds_header_t       hdr;
   dds_header_dx10_t  dx10hdr;
   dds_load_info_t    d;
@@ -157,6 +158,10 @@ read_dds (GFile          *file,
       return GIMP_PDB_EXECUTION_ERROR;
     }
 
+  fseek (fp, 0L, SEEK_END);
+  file_size = ftell (fp);
+  fseek (fp, 0, SEEK_SET);
+
   gimp_progress_init_printf ("Loading %s:", gimp_file_get_utf8_name (file));
 
   /* read header */
@@ -317,6 +322,16 @@ read_dds (GFile          *file,
       precision = GIMP_PRECISION_U8_NON_LINEAR;
     }
 
+  /* verify header information is accurate */
+  if (hdr.depth < 1                                       ||
+      (hdr.pitch_or_linsize > (file_size - sizeof (hdr))) ||
+      (((guint64) hdr.height * hdr.width * hdr.depth) > (file_size - sizeof (hdr))))
+    {
+      fclose (fp);
+      g_message ("Invalid or corrupted DDS header\n");
+      return GIMP_PDB_EXECUTION_ERROR;
+    }
+
   image = gimp_image_new_with_precision (hdr.width, hdr.height, type, precision);
 
   if (! image)
@@ -985,6 +1000,14 @@ load_layer (FILE             *fp,
   guint          size = hdr->pitch_or_linsize >> (2 * level);
   guint          layerw;
   gint           format = DDS_COMPRESS_NONE;
+  gsize          file_size;
+  gsize          current_position;
+
+  current_position = ftell (fp);
+  fseek (fp, 0L, SEEK_END);
+  file_size = ftell (fp);
+  fseek (fp, 0, SEEK_SET);
+  fseek (fp, current_position, SEEK_SET);
 
   if (width < 1) width = 1;
   if (height < 1) height = 1;
@@ -1082,6 +1105,13 @@ load_layer (FILE             *fp,
         size *= 16;
     }
 
+  if (size > (file_size - current_position) ||
+      size > hdr->pitch_or_linsize)
+    {
+      g_message ("Requested data exceeds size of file.\n");
+      return 0;
+    }
+
   if ((hdr->flags & DDSD_LINEARSIZE) &&
       !fread (buf, size, 1, fp))
     {
@@ -1121,6 +1151,15 @@ load_layer (FILE             *fp,
               gimp_progress_update ((double) y / (double) hdr->height);
             }
 
+          current_position = ftell (fp);
+          if ((hdr->flags & DDSD_PITCH)                          &&
+              ((width * d->bpp) > (file_size - current_position) ||
+               (width * d->bpp) > hdr->pitch_or_linsize))
+            {
+              g_message ("Requested data exceeds size of file.\n");
+              return 0;
+            }
+
           if ((hdr->flags & DDSD_PITCH) &&
               ! fread (buf, width * d->bpp, 1, fp))
             {
-- 
2.43.0

